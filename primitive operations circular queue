 #include <stdio.h>
#define MAX_SIZE 5
int queue[MAX_SIZE];
int front = -1, rear = -1;
int isFull() {
    if ((front == 0 && rear == MAX_SIZE - 1) || (front == rear + 1))
        return 1;
    else
        return 0;
}
int isEmpty() {
    if (front == -1)
        return 1;
    else
        return 0;
}
void enqueue(int data) {
    if (isFull()) {
        printf("Queue is full. Cannot enqueue.\n");
    } else {
        if (front == -1)
            front = 0;
        rear = (rear + 1) % MAX_SIZE;
        queue[rear] = data;
        printf("%d enqueued to the queue.\n", data);
    }
}
void dequeue() {
    int data;
    if (isEmpty()) {
        printf("Queue is empty. Cannot dequeue.\n");
    } else {
        data = queue[front];
        printf("%d dequeued from the queue.\n", data);
        if (front == rear) {
            front = -1;
            rear = -1;
        } else {
            front = (front + 1) % MAX_SIZE;
        }
    }
}
void display() {
    int i;
    if (isEmpty()) {
        printf("Queue is empty.\n");
    } else {
        printf("Queue elements: ");
        for (i = front; i != rear; i = (i + 1) % MAX_SIZE) {
            printf("%d ", queue[i]);
        }
        printf("%d\n", queue[i]);
    }
}
int main() {
    enqueue(1);
    enqueue(2);
    enqueue(3);
    enqueue(4);
    enqueue(5);
    display();
    dequeue();
    dequeue();
    display();
 enqueue(6);
    enqueue(7);
    display();
    return 0;
}
